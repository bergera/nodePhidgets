{
    "project": {
        "name": "phidgets",
        "version": "0.5.0-alpha.4",
        "description": "A Node.js library enabling the use of various Phidgets interface boards.",
        "url": ""
    },
    "files": {
        "lib/phidgets.js": {
            "name": "lib/phidgets.js",
            "modules": {
                "phidgets": 1
            },
            "classes": {
                "Phidget": 1,
                "PhidgetInterfaceKit": 1,
                "PhidgetLED": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "phidgets": {
            "name": "phidgets",
            "submodules": {},
            "classes": {
                "Phidget": 1,
                "PhidgetInterfaceKit": 1,
                "PhidgetLED": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/phidgets.js",
            "line": 941,
            "description": "The `Phidgets` library module makes it easy to connect to various sensor and controller\nboards made by [Phidgets Inc.](http://www.phidgets.com) This library works under\n[Node.js](http://www.nodejs.org) and other compatible frameworks such as\n[io.js](http://www.iojs.org)\n\nFor support, go to the GitHub [project page](https://github.com/evantahler/nodePhidgets).\n\nPlease note that this library is an open source project that is not affiliated with\nPhidgets Inc.",
            "todo": [
                "Add support for authentication.",
                "Complete the close() function (see AS3 source for example).",
                "Understand what lid0 does. I do not see it used anywhere ?!",
                "Implement a decent toString() method for completeness.",
                "There seems to be an issue in nw.js when the app is reloaded.",
                "Create getter and setter for label because it must match certain requirements.",
                "Parse missing report lines for PhidgetInterfaceKit and PhidgetLED.",
                "Create getter/setter for interReportPeriod. It cannot be set after connection.",
                "There are issues with the reconnection procedures when it times out."
            ]
        }
    },
    "classes": {
        "Phidget": {
            "name": "Phidget",
            "shortname": "Phidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "phidgets",
            "namespace": "",
            "file": "lib/phidgets.js",
            "line": 36,
            "description": "The `Phidget` class is an abstract class providing common properties and methods to all\nthe board-specific child classes. This class cannot be instantiated directly. Please\ninstantiate one of the child classes instead (`PhidgetInterfaceKit`, `PhidgetLED`,\netc.).",
            "is_constructor": 1
        },
        "PhidgetInterfaceKit": {
            "name": "PhidgetInterfaceKit",
            "shortname": "PhidgetInterfaceKit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "phidgets",
            "namespace": "",
            "file": "lib/phidgets.js",
            "line": 735,
            "description": "The `PhidgetInterfaceKit` class allows you to control and receive data from all Phidget\ninterface kit boards :\n\n * PhidgetInterfaceKit 8/8/8 normal and mini-format\n * PhidgetInterfaceKit 2/2/2\n * PhidgetInterfaceKit 0/16/16\n * PhidgetInterfaceKit 8/8/8 (with and without hub)\n * etc.\n\nNot all of these boards have been tested. If you possess one and can verify its\ncompatibility, let us know.",
            "is_constructor": 1,
            "extends": "Phidget"
        },
        "PhidgetLED": {
            "name": "PhidgetLED",
            "shortname": "PhidgetLED",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "phidgets",
            "namespace": "",
            "file": "lib/phidgets.js",
            "line": 941,
            "description": "The PhidgetLED class allows you to control a PhidgetLED-64 Advanced board.\n\nWarning: as of now, only basic functionalities have been implemented. More to come...",
            "is_constructor": 1,
            "extends": "Phidget"
        }
    },
    "classitems": [
        {
            "file": "lib/phidgets.js",
            "line": 7,
            "class": "Phidget"
        },
        {
            "file": "lib/phidgets.js",
            "line": 8,
            "class": "Phidget"
        },
        {
            "file": "lib/phidgets.js",
            "line": 9,
            "class": "Phidget"
        },
        {
            "file": "lib/phidgets.js",
            "line": 53,
            "description": "[read-only] Array of all the devices supported by this library.",
            "itemtype": "property",
            "name": "supportedDevices",
            "type": "{string[]}",
            "readonly": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 72,
            "description": "[read-only] The type of device (i.e. PhidgetInterfaceKit, PhidgetLED, etc.).",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "readonly": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 85,
            "description": "[read-only]  Whether the device is ready for use or not. A device must be 'opened'\nbefore it can be used.",
            "itemtype": "property",
            "name": "ready",
            "type": "{Boolean}",
            "readonly": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 100,
            "description": "Whether to try automatically reopen the device if it gets remotely closed.",
            "itemtype": "property",
            "name": "reopen",
            "type": "{Boolean}",
            "default": "true",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 108,
            "description": "The host name or address of the Phidgets webservice to connect to.",
            "itemtype": "property",
            "name": "host",
            "type": "{String}",
            "default": "127.0.0.1",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 116,
            "description": "The port of the Phidgets webservice to connect to.",
            "itemtype": "property",
            "name": "port",
            "type": "{int}",
            "default": "5001",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 124,
            "description": "The unique serial number of the device. If specified, it will be used to connect to\nthe matching device.",
            "itemtype": "property",
            "name": "serial",
            "type": "{int}",
            "default": "undefined",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 134,
            "description": "The unique label of the device. If specified, it will be used to connect to the\nmatching device.",
            "itemtype": "property",
            "name": "label",
            "type": "{String}",
            "default": "undefined",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 144,
            "description": "The unique ID of the Phidget WebService the device is currently connected to.",
            "itemtype": "property",
            "name": "serverId",
            "type": "{int}",
            "default": "undefined",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 153,
            "description": "The password to connect to the WebService. If specified, it will be used when opening\na new connection. As soon as connected the password will be erased. THIS IS CURRENTLY\nSET TO PRIVATE BECAUSE IT'S NOT IMPLEMENTED YET!",
            "itemtype": "property",
            "name": "password",
            "type": "{String}",
            "default": "undefined",
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 165,
            "description": "[read-only] Human-readable version of the board's name (i.e. \"Phidget InterfaceKit\n8/8/8\". This information is only available some time after the connection has been\nsuccessfully opened.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "default": "undefined",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 181,
            "description": "[read-only] This number distinguishes between revisions of a specific type of\nPhidget. It is only useful for debugging purposes. This information is only available\nsome time after the connection has been successfully opened.",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "default": "undefined",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 197,
            "description": "The delay (in milliseconds) between report updates sent from the webservice. This is\nrequested of the server during the opening of a phidget. Therefore, if you want to\nuse it, you must assign it before calling `open()`.",
            "itemtype": "property",
            "name": "interReportPeriod",
            "type": "{int}",
            "default": "8",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 227,
            "description": "Opens a connection to a Phidget device. Opening a connection is a two-step process.\nFirst, a connection to the Phidget WebService (which must be running) is established.\nThen, a session to the specified device (which must be plugged in) is opened.",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "host",
                            "description": "Hostname or IP address to connect to",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "port",
                            "description": "Port to connect to",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "serial",
                            "description": "Serial number of the device to connect to",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "label",
                            "description": "Label of the device to connect to (can be set in the\n       Phidgets control panel).",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns the Phidget to allow method chaining.",
                "type": "Phidget"
            },
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 252,
            "description": "Event emitted when an attempt to open a Phidget has been initiated.",
            "itemtype": "event",
            "name": "opening",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual Phidget object that emitted the event.",
                    "type": "Phidget"
                }
            ],
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 303,
            "description": "Event emitted when an attempt to open a Phidget times out.",
            "itemtype": "event",
            "name": "timeout",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual Phidget object that emitted the event.",
                    "type": "Phidget"
                }
            ],
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 325,
            "description": "Closes a previously opened connection to a Phidget device.",
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "Returns the Phidget to allow method chaining.",
                "type": "Phidget"
            },
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 346,
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 355,
            "description": "Event emitted when the connection to a phidget has been remotely closed.",
            "itemtype": "event",
            "name": "closed",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual object that emitted the event.",
                    "type": "Phidget"
                }
            ],
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 365,
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 381,
            "description": "Event emitted when an attempt to automatically re-open a closed Phidget is\nbeing carried on.",
            "itemtype": "event",
            "name": "reopening",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual Phidget object that emitted the event.",
                    "type": "Phidget"
                },
                {
                    "name": "data",
                    "description": "Additional data regarding the event.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attempt",
                            "description": "The number of re-opening attempts performed.",
                            "type": "Int"
                        },
                        {
                            "name": "max",
                            "description": "The maximum number of attempts that will be tried before\nfailing.",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 408,
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 413,
            "description": "Event emitted when an error occurs while trying to open a phidget",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual object that emitted the event.",
                    "type": "Phidget"
                },
                {
                    "name": "error",
                    "description": "The error object",
                    "type": "Error",
                    "props": [
                        {
                            "name": "address",
                            "description": "The network address",
                            "type": "String"
                        },
                        {
                            "name": "code",
                            "description": "The error code",
                            "type": "String"
                        },
                        {
                            "name": "errno",
                            "description": "The error number",
                            "type": "String"
                        },
                        {
                            "name": "message",
                            "description": "The error message",
                            "type": "String"
                        },
                        {
                            "name": "port",
                            "description": "The network port",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 431,
            "description": "This function is called each time data is received from the Phidget WebSerice. It adds\nthe data to the input buffer and checks if full lines (separated by '\\n') can be\nreconstructed. If full lines are found they are handed over to the `_parseLineInput()`\nmethod for processing.",
            "itemtype": "method",
            "name": "_handleData",
            "params": [
                {
                    "name": "chunk",
                    "description": "A chunk of utf8 encoded text to parse",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 455,
            "description": "Event emitted when a new line of data has been received from the web service. This\nis mostly useful for debugging purposes (hence the @private denomination). It will\nlet you view all data coming in.",
            "itemtype": "event",
            "name": "received",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual Phidget object that emitted the event.",
                    "type": "Phidget"
                },
                {
                    "name": "data",
                    "description": "The actual string data received.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 473,
            "description": "Parses a single line of data typically received from the Phidget WebService. If the\nline is a *report* line, the function hands it off to the `_parsePskKey()` method.\nOtherwise, it deals with it locally.",
            "itemtype": "method",
            "name": "_parseLineInput",
            "params": [
                {
                    "name": "line",
                    "description": "A non-terminated line of utf8 text",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 505,
            "description": "Event emitted when a phidget is successfully opened.",
            "itemtype": "event",
            "name": "opened",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual Phidget object that emitted the event.",
                    "type": "Phidget"
                }
            ],
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 556,
            "description": "Parses a /PSK string and performs appropriate action.",
            "params": [
                {
                    "name": "oPsk",
                    "description": "Original /PSK string typically coming from the Phidget WebService",
                    "type": "String"
                },
                {
                    "name": "self",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 628,
            "description": "Parses Phidget-specific data received from the Phidget WebService. This function is\nmeant to be overridden by subclasses.",
            "itemtype": "method",
            "name": "_parsePhidgetSpecificData",
            "params": [
                {
                    "name": "data",
                    "description": "An object containing the received data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The device identifier (e.g. PhidgetInterfaceKey,\n       PhidgetLED, etc.).",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "The custom label set for the device.",
                            "type": "String"
                        },
                        {
                            "name": "serial",
                            "description": "The serial number of the device.",
                            "type": "Int"
                        },
                        {
                            "name": "keyword",
                            "description": "A keyword identifying the type of information conveyed. It\n       could be 'Input', 'Version', 'DataRate', etc.",
                            "type": "String"
                        },
                        {
                            "name": "index",
                            "description": "The numerical index (for indexed keys only)",
                            "type": "Int"
                        },
                        {
                            "name": "value",
                            "description": "The actual value.",
                            "type": "String"
                        },
                        {
                            "name": "status",
                            "description": "The status of the key. It could be: 'added', 'changed',\n       'removing', etc.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 648,
            "description": "Sets phidget-specific state before the 'opened' event is triggered. This is a good\nplace for subclasses to assign initial values to the board. This is meant to be\noverridden by subclasses.",
            "itemtype": "method",
            "name": "_setPhidgetSpecificInitialState",
            "access": "protected",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 658,
            "description": "Returns a /PCK string built from the specified parameters. PCK strings are the keys\nsent out to control the board.",
            "itemtype": "method",
            "name": "_makePckString",
            "params": [
                {
                    "name": "keyword",
                    "description": "The operation keyword to use",
                    "type": "String"
                },
                {
                    "name": "index",
                    "description": "The index of the output to use",
                    "type": "Int",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 674,
            "description": "Sends the /PCK string (with attached value) to the webservice.",
            "itemtype": "method",
            "name": "_sendPck",
            "params": [
                {
                    "name": "key",
                    "description": "A /PCK string (typically form the _makePckString() method)",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "Int|string"
                },
                {
                    "name": "persistent",
                    "description": "Whether the value should persist or whether its for the\n       session only",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 691,
            "description": "Sends a line of data to the webservice",
            "itemtype": "method",
            "name": "_sendLine",
            "params": [
                {
                    "name": "line",
                    "description": "A non-terminated line of data to send",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 702,
            "description": "Event emitted when a new line of data has been sent to the Phidget WebService. This\nis mostly useful for debugging purposes (hence the @private denomination). It will\nlet you view all data going out.",
            "itemtype": "event",
            "name": "sent",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual Phidget object that emitted the event.",
                    "type": "Phidget"
                },
                {
                    "name": "data",
                    "description": "The actual string of sent data.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 715,
            "description": "Returns the value after making sure it falls between min and max.",
            "itemtype": "method",
            "name": "_forceBetween",
            "params": [
                {
                    "name": "value",
                    "description": "The value to check",
                    "type": "Int|Number"
                },
                {
                    "name": "min",
                    "description": "The minimum value desired",
                    "type": "Int"
                },
                {
                    "name": "max",
                    "description": "The maximum value desired",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "access": "protected",
            "tagname": "",
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 731,
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 732,
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 733,
            "class": "Phidget",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 757,
            "description": "[read-only] An object containing the current value for all board inputs. The values\nare boolean. To retrieve a value simply use the input number. For example:\nPhidgetInterfaceKit.inputs[5].",
            "itemtype": "property",
            "name": "inputs",
            "type": "{{}}",
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 767,
            "description": "[read-only] An object containing the current value for all board sensors. The values\nare integers. To retrieve a value simply use the sensor number. For example:\nPhidgetInterfaceKit.sensors[5].",
            "itemtype": "property",
            "name": "sensors",
            "type": "{{}}",
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 777,
            "description": "[read-only] An object containing the current value for all board outputs. The values\nare boolean. To retrieve a value, simply use the output number. For example:\nPhidgetInterfaceKit.outputs[5].",
            "itemtype": "property",
            "name": "outputs",
            "type": "{{}}",
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 787,
            "description": "Determines whether ratiometric values should be used or not for analog sensors. If\nthis property is defined before the phidget is opened, it will be set as soon as\npossible after opening it. If it is defined after the board is opened and ready, it\nwill be set right away.",
            "itemtype": "property",
            "name": "ratiometric",
            "default": "undefined",
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 809,
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 816,
            "description": "Sets the specified output to active (true) or inactive (false).",
            "itemtype": "method",
            "name": "setOutput",
            "params": [
                {
                    "name": "index",
                    "description": "The output number to set (or array of output numbers)",
                    "type": "Int|Array"
                },
                {
                    "name": "value",
                    "description": "The value you wish to set the output to.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the PhidgetInterfaceKit to allow method\n         chaining.",
                "type": "PhidgetInterfaceKit"
            },
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 851,
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 873,
            "description": "Event emitted when binary input data is received.",
            "itemtype": "event",
            "name": "input",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual PhidgetInterfaceKit object that\n       emitted the event.",
                    "type": "PhidgetInterfaceKit"
                },
                {
                    "name": "data",
                    "description": "An object containing the input data and related information",
                    "type": "Object",
                    "props": [
                        {
                            "name": "index",
                            "description": "The input's index number",
                            "type": "Int"
                        },
                        {
                            "name": "value",
                            "description": "The input's received value",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 893,
            "description": "Event emitted when analog sensor data is received",
            "itemtype": "event",
            "name": "sensor",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual PhidgetInterfaceKit object that\n       emitted the event.",
                    "type": "PhidgetInterfaceKit"
                },
                {
                    "name": "data",
                    "description": "An object containing the sensor data and related information",
                    "type": "Object",
                    "props": [
                        {
                            "name": "index",
                            "description": "The sensor's index number",
                            "type": "Int"
                        },
                        {
                            "name": "value",
                            "description": "The sensor's received value",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 913,
            "description": "Event emitted when data is being outputted through one of the outputs",
            "itemtype": "event",
            "name": "output",
            "params": [
                {
                    "name": "emitter",
                    "description": "The actual PhidgetInterfaceKit object that\n       emitted the event.",
                    "type": "PhidgetInterfaceKit"
                },
                {
                    "name": "data",
                    "description": "An object containing the output data and related information",
                    "type": "Object",
                    "props": [
                        {
                            "name": "index",
                            "description": "The sensor's index number",
                            "type": "Int"
                        },
                        {
                            "name": "value",
                            "description": "The sensor's received value",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 937,
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 938,
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 939,
            "class": "PhidgetInterfaceKit",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 953,
            "description": "[read-only] An object containing the current value for all board outputs. The values\nare integers between 0 and 100. To retrieve the value simply use the output number.\nFor example: PhidgetLED.outputs[5].",
            "itemtype": "property",
            "name": "outputs",
            "type": "{{}}",
            "class": "PhidgetLED",
            "module": "phidgets"
        },
        {
            "file": "lib/phidgets.js",
            "line": 967,
            "description": "Adjusts the brightness of a LED.",
            "itemtype": "method",
            "name": "setBrightness",
            "params": [
                {
                    "name": "index",
                    "description": "The LED to for which to adjust the brightness",
                    "type": "Int|int[]"
                },
                {
                    "name": "value",
                    "description": "The value (0-100) you wish to adjust the brightness to",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Returns the Phidget to allow method chaining",
                "type": "Phidget"
            },
            "class": "PhidgetLED",
            "module": "phidgets"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/phidgets.js:227"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/phidgets.js:325"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/phidgets.js:816"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/phidgets.js:967"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:7"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:8"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:9"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:346"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:365"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:408"
        },
        {
            "message": "Missing item type\nParses a /PSK string and performs appropriate action.",
            "line": " lib/phidgets.js:556"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:731"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:732"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:733"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:809"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:851"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:937"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:938"
        },
        {
            "message": "Missing item type",
            "line": " lib/phidgets.js:939"
        }
    ]
}